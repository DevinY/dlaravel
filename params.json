{
  "name": "D-Laravel",
  "tagline": "Laravel with PHP-FPM, MySQL and nginx using docker-compose",
  "body": "#D-Laravel\r\n\r\n您是否還不是很了解nginx的主機設定?  讓d-laravel幫助您，快速進入Laravel的本機開發環境。\r\n\r\n類似於官網的Valet，可同時執行多個 *.dev的開發測試的網站。\r\n\r\nd-laravel使用dockr-compose的微服務架構，\r\n\r\n主要包含，nginx(網頁服務)、php-fpm(php)及mysql(資料庫)，\r\n\r\n使用d-laravel，代表了，我們的Mac系統，不需要安裝mysql，nginx及php-fpm，就可以使用這些環境了。\r\n\r\n還可自訂docker-compose-custom.yml快速創建出自己的開發環境。\r\n\r\n###為什麼用d-laravel\r\n我稱這個repo叫d-laravel\r\n\r\n而repo叫laravel，是因為覺的這樣叫好下載，或進入目錄中..@@\r\n\r\n<pre>git clone https://github.com/deviny/laravel</pre>\r\n\r\n話說，要自己在MacOS上編譯php的laravel環境並不是一件容易的事情。\r\n\r\n如果我想在MacOS跑不同的PHP或新版PHP似乎讓事情變的有點麻煩。\r\n\r\nDocker跟Vagrant比起來，docker的啟動速度是秒級的，\r\n\r\n比起Vagrant的VM的分鐘級的啟動速度，快很多。\r\n\r\n而Laravel官方的Valet，我的使用經驗上也是要裝一堆東西，DnsMasq及Caddy，\r\n\r\n對於我的錯亂中的Mac，只會更加錯亂@@，Caddy吃了我的port 80不知怎麼停用，搞半天移不太掉，\r\n\r\n最後Laravel官方的移除指令valet uninstall才搞定。\r\n\r\n總而言之，我覺的docker才是本機開發的解決之道，\r\n\r\n並且在docker的微服務實作的架構下，可提供較大的彈性。\r\n\r\n因為我是Mac的使用者，所以建立了./conosle及./create這兩個bash指令，\r\n\r\n來幫助我快速建立Laravel在Mac OS上的本機測試環境。\r\n\r\n如果您對於d-laravel有興趣，歡迎下載來試試看。\r\n\r\n基本上您只要會，下方四種指令就搞定啦:) \r\n\r\n<pre>\r\n./create test1  (建立test1.dev)\r\n./console down或./console up (啟用及停用container)\r\n./console restart    (./console down再./console up)\r\n</pre>\r\n\r\n####主要目錄結構\r\n<pre>\r\netc/   (nginx、php.ini及mysql的相關設定檔)\r\ndata/  (mysql的資料檔案，./console up 自動生成)\r\nsites/ (專案的資夾，./create test1時，會建立在這個此目錄下)\r\ncreate (簡化的bash，用來快速的建立laravel的專案)\r\nconsole(簡化的bash，用來快速使用各種docker-compose的命令。例如:./console mysql即可進入mysql)\r\ndocker-compose.yml (一個softlink，連結到不同的設定檔，例如:./console custom，即何將連結連到docker-compose-custom.yml)\r\n</pre>\r\n\r\n####一、請先安裝docker-for-mac\r\n<pre><code>\r\nhttps://docs.docker.com/docker-for-mac/\r\n<br/>\r\n</code></pre>\r\n\r\n####二、例如用git clone這個repo，並進入laravel資料夾，然後執行：./console pull。\r\n<pre><code>\r\ngit clone https://github.com/DevinY/laravel.git\r\ncd laravel\r\n./console pull\r\n第一次執行會花較久的時間從dockhub上，下載docker-compose所需要的images.\r\n<br/>\r\n</code></pre>\r\n\r\n####三、執行./create ['project name'] 建立開發專案\r\n<pre><code>\r\n例如:\r\n./create test1\r\n那麼就會建立出 http://test1.dev 網站(本機測試用的外部無法存取)。\r\n可以建立多個project站台\r\n\r\n需有系統權修改/etc/hosts檔，./create的過程中會需要詢問您的系統密碼:\r\n目前只可在Mac OS上使用。\r\n<br/>\r\n</code></pre>\r\n\r\n\r\n####四、停止請在目錄下執行./console down\r\n<pre><code>\r\n注意事項: 這個只是拿來開發測試用的，Mysql的root是沒有密碼的。\r\n你可能需要修改docker-compose.yml啟動時的TZ，目前設為Asia/Taipei\r\n</code></pre>\r\n\r\n####五、更新\r\n<pre><code>\r\ncd laravel-dev\r\ngit pull\r\n</code></pre>\r\n\r\nDocker指令及DevinY/laravel提供的./console的bash指令\r\n\r\n|Docker官方指令   |./console Bash指令| 說明|\r\n|---|---|---|\r\n| docker-compose pull  |./console pull   |抓最新的images   |\r\n| docker-compose up -d  |./console up   |啟動container   |\r\n| docker-compose down  |./console down  |停止container   |\r\n| docker-compose ps或docker ps|./console ps  |查看docker-compose的process   |\r\n| docker-compose exec php bash   |./console  |進入php的container   |\r\n| docker-compose exec db mysql   |./console mysql  |執行mysql   |\r\n| docker-compose exec web nginx -s reload   |./console reload  |從載nginx設定   |\r\n|   |./create [ProjectName]|建立一個project，並完成所有機本的環境設定   |\r\n|   |例如: ./create test1  |例如: 這樣會建立一個http://test1.dev的網站   |\r\n|   |./console restart  |重啟container   |\r\n|   |./console info  |查看目前可用的sites資料(這裡是查單的查詢sites資料夾)   |\r\n|模式切換:|\r\n|   |./console random  |container啟動時，使用隨機埠|\r\n|   |./console mode1  |使用本機port 80及127.0.0.1:3306|\r\n|   |./console custom  |使用自己的docker-compose-custom.yml|\r\n|下方相當於，透過./console mode1設定模式後，執行./console up:|\r\n|docker-compose -f docker-compose-mode1.yml up -d| |使用port 80及port 3306|\r\n|docker-compose -f docker-compose-random.yml up -d| |指定隨機埠的啟動檔|\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}