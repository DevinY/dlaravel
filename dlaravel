#!/bin/bash
if [ "${1}" == "clear" ]; then
    echo "移除hosts內所有的*.dev域名嗎?(y/n)"
    read  ans
        if [ ${ans} = 'y' ]; then
            #移除hosts下，所有的.dev名稱
            sudo sed -i.bak '/\.dev$/d' /etc/hosts
        fi
    exit; 
fi

#移除系統上所有的containers及images及hosts
if [ "${1}" == "uninstall" ]; then
    echo "Warning!!All your docker images and containers will be removed!!"
    echo "Please make sure you know what you are doing."
    echo "警告!!將清空所有的docker images及containers及在hosts內的所有*.dev設定(y/n)"
    read  ans
        if [ ${ans} = 'y' ]; then
        docker-compose -f docker-compose.yml down --remove-orphans > /dev/null 2>&1
        sudo sed -i.bak '/\.dev$/d' /etc/hosts
        docker rm $(docker ps -a -q) > /dev/null 2>&1
        docker rmi $(docker images -q) > /dev/null 2>&1
        fi
    exit; 
fi

echo "重整hosts檔，將移除/etc/hosts內所有的*.dev域名及dlaravel的etc/*.conf所有nginx設定檔，使用sites資料夾重建設定嗎?(y/n)"
read  ans
if [ ${ans} = 'n' ]; then
        exit
else 
#建立sites資料夾，如果不存在
if [ ! -d "sites/" ]; then
    echo "sites資料夾未建立"
    exit;
fi
#移除hosts下，所有的.dev名稱
sudo sed -i.bak '/\.dev$/d' /etc/hosts
#抓出sites資料夾下所有的目錄
ls -ld sites/*|grep ^d|cut -d '/' -f2| awk '{ printf "127.0.0.1 %s.dev\n", $0}' > ./etc/dlaravel_sites
#暫存目前的hosts檔
sudo cat /etc/hosts > ./etc/hosts_temp
#組合產生出來的127.0.0.1 *.dev清單，到暫存的hosts內
sudo cat ./etc/dlaravel_sites >> ./etc/hosts_temp
#確認hosts_temp是存在的，才調整/etc/hosts檔
if [ $? -eq 0 ]; then
#移動並更新
sudo mv ./etc/hosts_temp /etc/hosts
#調整權限
sudo chown root /etc/hosts
sudo chgrp wheel /etc/hosts
#重建 *.conf
#移除nginx下的所有*.conf的設定檔
mv ./etc/default.conf ./etc/default.temp
mv ./etc/default-ssl.conf ./etc/default-ssl.temp
find ./etc -name "*.conf" -exec rm {} \; 
#還原
mv ./etc/default.temp ./etc/default.conf
mv ./etc/default-ssl.temp ./etc/default-ssl.conf

fi
#移除暫存的檔案
rm ./etc/dlaravel_sites
fi
dscacheutil -flushcache
