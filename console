#!/bin/bash
#取得scripts的執行路徑
base_path="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

#開發測試中Beta
if [ "${1}" == "alias" ]; then
calias="alias c=${base_path}/console"
echo ${calias}
exit;
fi

# 停止並移除所有啟動中及停用的container
if [ "${1}" == "clear" ]; then
    echo "Would You like to stop / remove all Docker containers?(y/n)"
    read  ans
    if [ ${ans} = 'n' ]; then
        exit
    else 
        #檢測是否有container啟動中
        docker ps|grep -q Up
        if [ $? -eq 0 ]; then
         docker stop $(docker ps --format '{{.Names}}')
        fi
        if [ ! -z "$(docker ps -a -q)" ]; then
         docker rm $(docker ps -a -q)
        fi
    fi
    exit;
fi

#下載images
if [ "${1}" == "pull" ]; then
    docker pull nginx 
    docker pull mysql:5.6.31
    docker pull deviny/fpm:7.1.1
    exit;
fi

#變更模式, web:80, db:127.0.0.1:3306
if [ "${1}" == "normal" ]; then
    docker-compose -f ${base_path}/docker-compose.yml down
    echo "docker-compose setting file changed."
    echo "HOST DB: listen on 127.0.0.1:3306."
    echo "HOST WEB: listen on port 80."
    ln -vsf ${base_path}/docker-compose-normal.yml ${base_path}/docker-compose.yml
    docker-compose -f ${base_path}/docker-compose.yml up -d
    ${base_path}/console info
    exit;
fi

#隨機
if [ "${1}" == "random" ]; then
    docker-compose -f ${base_path}/docker-compose.yml down
    echo "docker-compose setting file changed."
    echo "HOST DB: listen on random port."
    echo "HOST WEB: listen on random port."
    ln -vsf ${base_path}/docker-compose-random.yml ${base_path}/docker-compose.yml
    docker-compose -f ${base_path}/docker-compose.yml up -d
    ${base_path}/console info
    exit;
fi

#Custom Config
if [ "${1}" == "custom" ]; then
    #檢測docker-compose-custom.yml是否存在
    if [ -e "${base_path}/docker-compose-custom.yml" ]; then
        docker-compose -f ${base_path}/docker-compose.yml down
        ln -vsf ${base_path}/docker-compose-custom.yml ${base_path}/docker-compose.yml 
        docker-compose -f ${base_path}/docker-compose.yml up -d
    else
        cp ${base_path}/docker-compose-random.yml ${base_path}/docker-compose-custom.yml
        ln -vsf ${base_path}/docker-compose-custom.yml ${base_path}/docker-compose.yml 
        echo "docker-compose-custom.yml is created."
        docker-compose -f ${base_path}/docker-compose.yml up -d
    fi 
    ${base_path}/console info
    exit;
fi


#停止docker-compose
if [ "${1}" == "down" ]; then
docker-compose -f ${base_path}/docker-compose.yml down
exit;
fi

#重啟
if [ "${1}" == "restart" ]; then
docker-compose -f ${base_path}/docker-compose.yml down
docker-compose -f ${base_path}/docker-compose.yml up -d
echo "DB:"
${base_path}/scripts/db-ports
echo "Web:"
${base_path}/scripts/web-ports
exit;
fi

if [ "${1}" == "up" ]; then
    if [ ! -f "${base_path}/docker-compose.yml" ]; then
        echo ${base_path}
        #檔案不存在，進行預設的soft link
        ln -s ${base_path}/docker-compose-random.yml ${base_path}/docker-compose.yml
    fi
    docker-compose -f ${base_path}/docker-compose.yml up -d
echo "DB:"
#設定DB的時區到Asia/Taipei
${base_path}/scripts/db-ports
echo "Web:"
${base_path}/scripts/web-ports
exit;
fi

#執行
if [ "${1}" == "exec" ]; then
    number=0;
    until [ -z "${1}" ]
        do
            number=$((${number} + 1));
            if [ ${number} -eq 2 ]; then
                #echo ${@}
                docker-compose -f ${base_path}/docker-compose.yml exec php ${@} 
                exit
            fi
        shift
    done
    echo "Run command of php container."
    echo -e "./console exec [command].\n"
    echo "for example:"
    echo "./console exec php -v"
    echo "./console exec composer -v"
    exit
fi

#進資料庫
if [ "${1}" == "mysql" ]; then
docker-compose -f ${base_path}/docker-compose.yml exec db mysql
exit;
fi

#啟動時檢測網頁資訊
if [ "${1}" == "info" ]; then
echo "DB:"
${base_path}/scripts/db-ports
echo "Web:"
${base_path}/scripts/web-ports
exit;
fi

#執行ps
if [ "${1}" == "ps" ]; then
echo ${base_path}
docker-compose -f ${base_path}/docker-compose.yml ps
exit
fi

#重新載入nginx設定
if [ "${1}" == "reload" ]; then
docker-compose -f ${base_path}/docker-compose.yml exec web nginx -s reload
exit
fi

#檢測是否執行
docker-compose -f ${base_path}/docker-compose.yml ps |grep -q 9000
if [ $? -eq 1 ]; then
docker-compose -f ${base_path}/docker-compose.yml up -d
fi
docker-compose -f ${base_path}/docker-compose.yml  exec php sudo -u dlaravel bash
