#!/bin/bash
#set -e
#取得scripts的執行路徑
scripts_path="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
base_path=`echo ${scripts_path}|sed 's#/scripts##'`

#檢測softlink是否可讀
function chk_docker_compose_file_is_readable {
    if [ ! -r "${base_path}/docker-compose.yml" ]; then
        echo "Soft link Error"
        echo "File ${base_path}/docker-compose.yml is not readdable!"
        echo "force link to ${base_path}/docker-compose-normal.yml"
        ln -vsf ${base_path}/docker-compose-normal.yml ${base_path}/docker-compose.yml
    fi
}
#array_service
function array_service {
        array_service=(${DOCKER_SERVICES})
        CONSOLE_CMD=""
        for i in "${array_service[@]}"
        do
         : 
        CONSOLE_CMD+="-f ${base_path}/${i} "
        done
}
#dlaravel console log
function console_logs {
    chk_docker_compose_file_is_readable 
    if [ -z "${DOCKER_SERVICES}" ]; then
     echo "${winpty} docker-compose -f ${base_path}/docker-compose.yml ${@}"
     ${winpty} docker-compose -f ${base_path}/docker-compose.yml ${@}
    else
     array_service
     echo "${winpty} docker-compose -p $(basename ${base_path}) ${CONSOLE_CMD} ${@}"
     ${winpty} docker-compose -p $(basename ${base_path}) ${CONSOLE_CMD} ${@}
    fi
}
#display logs when error
function fail_exit {
    if [ $? -eq 1 ]; then
        console_logs logs ${@}
        exit;
    fi
}

#spcify service restart
function console_restart {
    chk_docker_compose_file_is_readable 
    if [ -z "${DOCKER_SERVICES}" ]; then
     ${winpty} docker-compose -f ${base_path}/docker-compose.yml ${@}
    else
     array_service
     ${winpty} docker-compose -p $(basename ${base_path}) ${CONSOLE_CMD} ${@}
    fi
}

#specify service up
function console_up_service {
    chk_docker_compose_file_is_readable 
    if [ -z "${DOCKER_SERVICES}" ]; then
     echo "${winpty} docker-compose -f ${base_path}/docker-compose.yml up -d ${@}"
     ${winpty} docker-compose -f ${base_path}/docker-compose.yml up -d ${@}
    else
     array_service
     echo "${winpty} docker-compose -p $(basename ${base_path}) ${CONSOLE_CMD} up -d ${@}"
     ${winpty} docker-compose -p $(basename ${base_path}) ${CONSOLE_CMD} up -d ${@}
    fi
}

#display soft link
function console_link {
    link=$(ls -l ${base_path}/docker-compose.yml)
    target_link=$(echo ${link}|cut -d" " -f 11)
    if [ ! -z ${target_link} ]; then
      echo "Currently docker-compose.yml is soft link to ${target_link}"
    fi
}

#dlaravel console exec
function console_exec {
    chk_docker_compose_file_is_readable 
    if [ -z "${DOCKER_SERVICES}" ]; then
     echo "${winpty} docker-compose -f ${base_path}/docker-compose.yml ${@}"
     ${winpty} docker-compose -f ${base_path}/docker-compose.yml ${@}
    else
     array_service
     echo "${winpty} docker-compose -p $(basename ${base_path}) ${CONSOLE_CMD} ${@}"
     ${winpty} docker-compose -p $(basename ${base_path}) ${CONSOLE_CMD} ${@}
    fi
}

#dlarave console up
function console_up {
    if [ ! -f "${base_path}/docker-compose.yml" ]; then
        echo ${base_path}
        #檔案不存在，進行預設的soft link
        ln -s ${base_path}/docker-compose-random.yml ${base_path}/docker-compose.yml
    fi
    console_link
    if [ -z "${DOCKER_SERVICES}" ]; then
        echo "${winpty} docker-compose -f ${base_path}/docker-compose.yml up -d --remove-orphans"
        ${winpty} docker-compose -f ${base_path}/docker-compose.yml up -d --remove-orphans
        else
        array_service
        echo "${winpty} docker-compose -p $(basename ${base_path}) ${CONSOLE_CMD} up -d --remove-orphans"
        ${winpty} docker-compose -p $(basename ${base_path}) ${CONSOLE_CMD} up -d --remove-orphans
    fi
        #暫時保留
        #${winpty} docker-compose exec web /bin/bash -c 'cd /etc/;ln -sf /usr/share/zoneinfo/Asia/Taipei localtime;dpkg-reconfigure -f noninteractive tzdata'
        fail_exit ${base_path} 
    echo "DB:"
        #設定DB的時區到Asia/Taipei
        ${base_path}/scripts/db-ports
        echo "Web:"
        ${base_path}/scripts/web-ports
}
#dlarave console pull
function console_pull {
    if [ ! -f "${base_path}/docker-compose.yml" ]; then
        echo ${base_path}
        #檔案不存在，進行預設的soft link
        ln -s ${base_path}/docker-compose-random.yml ${base_path}/docker-compose.yml
    fi
    console_link
    if [ -z "${DOCKER_SERVICES}" ]; then
        echo "${winpty} docker-compose -f ${base_path}/docker-compose.yml pull"
        ${winpty} docker-compose -f ${base_path}/docker-compose.yml pull
        else
        array_service
        echo "${winpty} docker-compose -p $(basename ${base_path}) ${CONSOLE_CMD} pull"
        ${winpty} docker-compose -p $(basename ${base_path}) ${CONSOLE_CMD} pull
    fi
}

#dlaravel console down
function console_down {
    chk_docker_compose_file_is_readable 
    if [ -z "${DOCKER_SERVICES}" ]; then
        if [ -e ${base_path}/docker-compose.yml ]; then
            echo "${winpty} docker-compose -f ${base_path}/docker-compose.yml down --remove-orphans"
            ${winpty} docker-compose -f ${base_path}/docker-compose.yml down --remove-orphans  
            else
            echo "${winpty} docker-compose -f ${base_path}/docker-compose-random.yml down --remove-orphans"
            ${winpty} docker-compose -f ${base_path}/docker-compose-random.yml down --remove-orphans  
        fi
        else
        array_service
        echo "docker-compose -p $(basename ${base_path}) ${CONSOLE_CMD} down --remove-orphans"
        docker-compose -p $(basename ${base_path}) ${CONSOLE_CMD} down --remove-orphans 
    fi
}
#dlaravel console down
function console_down_silent {
    chk_docker_compose_file_is_readable 
    if [ -z "${DOCKER_SERVICES}" ]; then
        if [ -e ${base_path}/docker-compose.yml ]; then
            echo "docker-compose -f ${base_path}/docker-compose.yml down --remove-orphans"
            docker-compose -f ${base_path}/docker-compose.yml down --remove-orphans  > /dev/null 2>&1
            else
            echo "docker-compose -f ${base_path}/docker-compose-random.yml down --remove-orphans"
            docker-compose -f ${base_path}/docker-compose-random.yml down --remove-orphans  > /dev/null 2>&1
        fi
        else
        array_service
        echo "docker-compose -p $(basename ${base_path}) ${CONSOLE_CMD} down --remove-orphans" 
        docker-compose -p $(basename ${base_path}) ${CONSOLE_CMD} down --remove-orphans > /dev/null 2>&1
    fi
}
#dlaravel console ps
function console_ps {
    chk_docker_compose_file_is_readable 
    if [ -f "${base_path}/.docker-compose.yml" ]; then
        echo "Can't find ${base_path}/docker-compose.yml"
    fi

    if [ -z "${DOCKER_SERVICES}" ]; then
          echo "${winpty} docker-compose -f ${base_path}/docker-compose.yml ps"
          ${winpty} docker-compose -f ${base_path}/docker-compose.yml ps
        else
        array_service
          echo "${winpty} docker-compose -p $(basename ${base_path}) ${CONSOLE_CMD} ps"
          ${winpty} docker-compose -p $(basename ${base_path}) ${CONSOLE_CMD} ps
    fi

}
#dlaravel console_top 
function console_top {
    chk_docker_compose_file_is_readable 
    if [ -f "${base_path}/.docker-compose.yml" ]; then
        echo "Can't find ${base_path}/docker-compose.yml"
    fi

    if [ -z "${DOCKER_SERVICES}" ]; then
          echo "${winpty} docker-compose -f ${base_path}/docker-compose.yml top"
          ${winpty} docker-compose -f ${base_path}/docker-compose.yml top
        else
        array_service
          echo "${winpty} docker-compose -p $(basename ${base_path}) ${CONSOLE_CMD} top"
          ${winpty} docker-compose -p $(basename ${base_path}) ${CONSOLE_CMD} top
    fi

}

#specify service top
function console_top_service {
    chk_docker_compose_file_is_readable 
    if [ -z "${DOCKER_SERVICES}" ]; then
        echo "${winpty} docker-compose -f ${base_path}/docker-compose.yml top ${@}"
        ${winpty} docker-compose -f ${base_path}/docker-compose.yml top ${@}
    else
     array_service
        echo "${winpty} docker-compose -p $(basename ${base_path}) ${CONSOLE_CMD} top ${@}"
        ${winpty} docker-compose -p $(basename ${base_path}) ${CONSOLE_CMD} top ${@}
    fi
}

#dlaravel console kill
function console_kill {
    if [ -z "${DOCKER_SERVICES}" ]; then
            echo "${winpty} docker-compose -f ${base_path}/docker-compose.yml down"
            ${winpty} docker-compose -f ${base_path}/docker-compose.yml down > /dev/null 2>&1
        else
        array_service
            echo "${winpty} docker-compose kill $(${winpty} docker-compose -p $(basename ${base_path}) ${CONSOLE_CMD} ps -q)"
             ${winpty} docker-compose kill $(${winpty} docker-compose -p $(basename ${base_path}) ${CONSOLE_CMD} ps -q) > /dev/null 2>&1
    fi

}
