#!/bin/bash
source ./scripts/checker

function dlaravelconfig {

#檢測hosts檔是否已新增 
sudo cat /etc/hosts|tr -s " "|grep "127.0.0.1 ${1}.dev"
#找不到時，就新增至Hosts
if [ $? -eq 1 ]; then
    echo "127.0.0.1 ${1}.dev" |sudo tee -a /etc/hosts
fi
sudo cat /etc/hosts|tr -s " "|grep "127.0.0.1 www.${1}.dev"
if [ $? -eq 1 ]; then
    echo "127.0.0.1 www.${1}.dev" |sudo tee -a /etc/hosts
fi

#docker-compose exec php /root/.composer/vendor/bin/laravel new ${1}
docker-compose exec php sudo -u dlaravel sed -i "s/DB_DATABASE=homestead/DB_DATABASE=${1}/" /var/www/html/${1}/.env

#建資料庫
docker-compose exec db mysql -e "CREATE DATABASE IF NOT EXISTS ${1}"

#授權
docker-compose exec db mysql -e "grant all on ${1}.* to 'homestead'@'%' IDENTIFIED by 'secret'"

#更新container權限
docker-compose exec db mysql -e "FLUSH PRIVILEGES"

#拷貝default.sample修改
#docker-compose exec web cp /etc/nginx/conf.d/default.sample /etc/nginx/conf.d/${1}.conf

#變更內容
#docker-compose exec web sed -i "s/laravel/${1}/g" /etc/nginx/conf.d/${1}.conf
#docker-compose exec web sed -i "s/localhost/${1}.dev/" /etc/nginx/conf.d/${1}.conf

source ./scripts/nginx-reload
web_port=`docker inspect --format='{{(index (index .NetworkSettings.Ports "80/tcp") 0).HostPort}}'  ${containerName}_web_1`
#echo " http://${1}.dev:${web_port}"

        if [ ${web_port} == 80 ]; then
        echo -n http://;echo ${1}.dev|cut -d/ -f 2; 
        else
        echo -n http://;echo ${1}.dev:${web_port}|cut -d/ -f 2; 
        fi

}

#由container建立Laravel
function dlaravel_new {
    echo "Run laravel installer in container: laravel new ${1}"
    docker exec -ti ${containerName}_php_1 sudo -u dlaravel /home/dlaravel/.composer/vendor/bin/laravel new ${1}
}


#未指定專案名稱
if [ $# -lt 1 ]; then
    echo "./create [project name]"
    echo "./create --conf [project name] : 只建立nginx設定檔"
    exit;
fi

#只建立nginx的設定檔
if [ "$#" -eq 2 ]; then
    if [ "${1}" = "--conf" ]; then
            sudo cat /etc/hosts|tr -s " "|grep "127.0.0.1 ${2}.dev"
            #找不到時，就新增至Hosts
            if [ $? -eq 1 ]; then
                echo "127.0.0.1 ${2}.dev" |sudo tee -a /etc/hosts
            fi

            docker ps |grep -q ${containerName}_php_1
            if [ $? -eq 0 ]; then
                source ./scripts/nginx-reload
            fi
        echo "To manually create new empty project:"
        echo "mkdir -p sites/${2}/public;touch sites/${2}/public/index.php"
        exit
    fi

    echo "./create --conf ['project name']"
    exit
fi

#資料夾不能有 . 
if [[ "${1}" =~ [\.] ]]; then
    echo "Can't have dot in Project name."
    exit;
fi

#檢測目錄是否已存在
if [ -e "sites/${1}" ]; then
    echo "The sites/${1} folder exists"
    exit
fi


#檢測是否執行
docker-compose  -f docker-compose.yml ps |grep ${containerName}_web_1|grep -q Up
if [ $? -eq 1 ]; then
    echo "${containerName}_php_1 is not running."
    echo "Would you like to create the project and run docker-compose up (y/n):"
    read  ans
    if [ ${ans} = 'n' ]; then
       exit
    else 
       docker-compose up -d
        if [ ${?} -ne 0 ]; then
            #啟動失敗，停止動作
            exit;
        fi
    fi
fi

#安裝新的Laravel
#檢測本機是否安裝laravel installer
which laravel >/dev/null 2>&1
if [ $? -eq 1 ]; then
        dlaravel_new ${1}
    else
    #加速安裝，使用Mac系統上的laravel installer
    laravel new sites/${1}
    #falback用container內的laravel
    if [ ${?} -ne 0 ]; then
        echo "Failback to run installer from container."
        dlaravel_new ${1}
    fi
fi

dlaravelconfig  ${1}
