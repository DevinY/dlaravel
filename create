#!/bin/bash
source ./scripts/checker

#未指定專案名稱
if [ $# -lt 1 ]; then
    echo "./create [project name]"
    exit;
fi

#資料夾不能有 . 
if [[ "${1}" =~ [\.] ]]; then
    echo "Can't have dot in Project name."
    exit;
fi



#檢測目錄是否已存在
if [ -e "sites/${1}" ]; then
    echo "The sites/${1} folder exists"
    exit
fi


#檢測是否執行
docker ps |grep -q ${containerName}_php_1
if [ $? -eq 1 ]; then
    echo "${containerName}_php_1 is not running."
    echo "Would you like to create the project and run docker-compose (y/n):"
    read  ans
    if [ ${ans} = 'n' ]; then
       exit
    else 
       docker-compose up -d
    fi
fi

#安裝新的Laravel
docker exec -ti ${containerName}_php_1 /root/.composer/vendor/bin/laravel new ${1}
#修正DB連線位置
docker exec -ti ${containerName}_php_1 sed -i 's/127.0.0.1/db/' /var/www/html/${1}/.env
docker exec -ti ${containerName}_php_1 sed -i "s/DB_DATABASE=homestead/DB_DATABASE=${1}/" /var/www/html/${1}/.env
#建資料庫
#docker exec -ti ${containerName}_php_1 mysql -uroot -h db -e "create database ${1}"
docker exec -ti ${containerName}_db_1 mysql -e "CREATE DATABASE IF NOT EXISTS ${1}"
#授權
#docker exec -ti ${containerName}_php_1 mysql -uroot -h db -e "grant all on ${1}.* to 'homestead'@'%'"
docker exec -ti ${containerName}_db_1 mysql -e "grant all on ${1}.* to 'homestead'@'${containerName}_php_1.${containerName}_default' IDENTIFIED BY 'secret'"

#更新container權限
#docker exec -ti ${containerName}_php_1 mysql -uroot -h db -e "flush privileges"
docker exec -ti ${containerName}_db_1 mysql -e "flush privileges"

#檢測hosts檔是否已新增 
sudo cat /etc/hosts|tr -s " "|grep "127.0.0.1 ${1}.dev"
#找不到時，就新增至Hosts
if [ $? -eq 1 ]; then
    echo "127.0.0.1 ${1}.dev" |sudo tee -a /etc/hosts
fi
#拷貝default.conf修改
docker exec -ti ${containerName}_web_1 cp /etc/nginx/conf.d/default.conf /etc/nginx/conf.d/${1}.conf

#變更內容
docker exec -ti ${containerName}_web_1 sed -i "s/laravel/${1}/g" /etc/nginx/conf.d/${1}.conf
docker exec -ti ${containerName}_web_1 sed -i "s/localhost/${1}.dev/" /etc/nginx/conf.d/${1}.conf

source ./scripts/nginx-reload
web_port=`docker inspect --format='{{(index (index .NetworkSettings.Ports "80/tcp") 0).HostPort}}'  ${containerName}_web_1`
echo " http://${1}.dev:${web_port}"


